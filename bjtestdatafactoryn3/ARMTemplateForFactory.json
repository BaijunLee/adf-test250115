{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bjtestdatafactoryn3"
		},
		"AzureDataExplorer1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer1'"
		},
		"AzureDataExplorer2_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer2'"
		},
		"AzureDataExplorer3_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer3'"
		},
		"AzureDataLakeStorage3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage3'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricks2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks2'"
		},
		"AzureDatabricksDeltaLake2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake2'"
		},
		"AzureDatabricksbjucdbrtest_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksbjucdbrtest'"
		},
		"AzureDatabricksbjucdbrtest3_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksbjucdbrtest3'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"AzureSynapseAnalyticsADFMI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalyticsADFMI'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=dbpod-workspacev2.sql.azuresynapse.azure.cn;Initial Catalog=dbpodpool"
		},
		"MySql1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'MySql1'"
		},
		"AzureDataExplorer1_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadx.chinanorth2.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adxdb1"
		},
		"AzureDataExplorer2_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadxn3.chinanorth3.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "bjadxdbn3"
		},
		"AzureDataExplorer3_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadxce2.chinaeast2.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer3_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer3_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adxce2db"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bjespadls2.dfs.core.chinacloudapi.cn"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://baijunadlsgen2.dfs.core.chinacloudapi.cn"
		},
		"AzureDataLakeStorage3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testpremadx.dfs.core.chinacloudapi.cn/"
		},
		"AzureDatabricksbjucdbrtest3_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1016-085658-e1ol6de2"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://bjadfkeyvault.vault.azure.cn/"
		},
		"MySql1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "bjmysqltest.mysql.database.chinacloudapi.cn"
		},
		"MySql1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test1"
		},
		"MySql1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "baijun@bjmysqltest"
		},
		"blobtrigger_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://testtrigger1.blob.core.chinacloudapi.cn"
		},
		"Tumblingadx_properties_pipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Tumblingadx_properties_pipeline_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"trigger2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/baijun-ADF2-RSG2/providers/Microsoft.Storage/storageAccounts/testtrigger1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DatabricksParameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable1_copy1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Set variable1_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/baili@mcpod.partner.onmschina.cn/test_adf_parameter",
							"baseParameters": {
								"tabname": {
									"value": "@variables('tabfullname')",
									"type": "Expression"
								},
								"schemaname": {
									"value": "@variables('schema')",
									"type": "Expression"
								},
								"catalogname": {
									"value": "@variables('catalogname')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksbjucdbrtest3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "tabfullname",
							"value": {
								"value": "@pipeline().parameters.testparameter1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "schema",
							"value": {
								"value": "@pipeline().parameters.testparameter2",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1_copy1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "catalogname",
							"value": {
								"value": "@pipeline().parameters.testparameter3",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"testparameter1": {
						"type": "string",
						"defaultValue": "salesorderdetail"
					},
					"testparameter2": {
						"type": "string",
						"defaultValue": "testschema"
					},
					"testparameter3": {
						"type": "string",
						"defaultValue": "bjuc1"
					}
				},
				"variables": {
					"tabfullname": {
						"type": "String",
						"defaultValue": "''"
					},
					"schema": {
						"type": "String"
					},
					"catalogname": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksbjucdbrtest3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshAAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AASRefresh",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"turnOffAsync": true,
							"url": {
								"value": "https://chinaeast2.asazure.chinacloudapi.cn/servers/bjaastest/models/TabularProject221124/refreshes",
								"type": "Expression"
							},
							"body": "{ \n\n    \"Type\": \"Full\", \n\n    \"CommitMode\": \"transactional\", \n\n    \"MaxParallelism\":10, \n\n    \"RetryCount\": 2, \n\n    }",
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.chinacloudapi.cn"
							}
						}
					},
					{
						"name": "getRefreshStatus",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://chinaeast2.asazure.chinacloudapi.cn/servers/bjaastest/models/TabularProject221124/refreshes/',activity('AASRefresh').output.operationId)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.chinacloudapi.cn"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getRefreshStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshStatus",
							"value": {
								"value": "@activity('getRefreshStatus').output.status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AASRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('RefreshStatus'), 'failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "RefreshFailed",
										"errorCode": "RefreshFailed"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"refreshId": {
						"type": "String"
					},
					"status": {
						"type": "String"
					},
					"startTime": {
						"type": "String"
					},
					"RefreshStatus": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromDBRtoMySQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "blobtrigger",
									"type": "LinkedServiceReference"
								},
								"path": "adftest"
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/blobtrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Refresh PBI Dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AAD auth",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/x-www-form-urlencoded"
							},
							"url": "https://login.partner.microsoftonline.cn/5691a5bf-29c0-43e2-b547-1377a4110078/oauth2/token",
							"body": "grant_type=client_credentials&client_id=327a78a2-5222-4207-84ac-51a8362f8c59&client_secret=75_M17U0D9_-A~SboK~SYlb~G-a2Qnp0g4&resource=https://analysis.chinacloudapi.cn/powerbi/api"
						}
					},
					{
						"name": "Refresh Dataset",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AAD auth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat(string(activity('AAD auth').output.token_type),' ',string(activity('AAD auth').output.access_token))",
									"type": "Expression"
								}
							},
							"url": "https://api.powerbi.cn/v1.0/myorg/groups/c0d63656-d3da-46be-9ce9-63d127ab925b/datasets/5b199cbb-76ee-4190-bb88-5984963ff042/refreshes",
							"body": "notifyOption=NoNotification"
						}
					},
					{
						"name": "Get Last Refresh Result in a Loop",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Refresh Dataset",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals('Unknown',variables('Refresh Status') ))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Get Dataset Refresh Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('AAD auth').output.token_type),' ',string(activity('AAD auth').output.access_token))",
												"type": "Expression"
											}
										},
										"url": "https://api.powerbi.cn/v1.0/myorg/groups/c0d63656-d3da-46be-9ce9-63d127ab925b/datasets/5b199cbb-76ee-4190-bb88-5984963ff042/refreshes?$top=1"
									}
								},
								{
									"name": "Refresh Result",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Dataset Refresh Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Refresh Status",
										"value": {
											"value": "@activity('Get Dataset Refresh Status').output.value[0].status",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Last Refresh Result in a Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Refresh Status'), 'Completed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Throw an Error",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://invalidurl",
										"body": {
											"invalid": "invalid"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Refresh Status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowtest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource",
								"query": "select F_TEST1(400) as a,b,name,name1 from test",
								"queryCommandTimeout": "03:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "a",
											"type": "Int32",
											"physicalType": "Int32"
										},
										"sink": {
											"name": "a",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "b",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "b",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name1",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "name1",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select F_TEST1(1850) as a,b,name,name1 from test",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "a",
											"type": "Int32",
											"physicalType": "Int32"
										},
										"sink": {
											"name": "a",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "b",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "b",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name1",
											"type": "String",
											"physicalType": "VarChar"
										},
										"sink": {
											"name": "name1",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureMySqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/premblobtoadx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": "2023-02-17T00:00:00Z",
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink",
								"ingestionMappingName": ""
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PremJson1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDataExplorerTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PremJson1')]",
				"[concat(variables('factoryId'), '/datasets/AzureDataExplorerTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testperm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/baili@mcpod.partner.onmschina.cn/test/testper"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testpython')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "testvaa",
							"value": {
								"value": "@pipeline().parameters.testseta",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"testseta": {
						"type": "string",
						"defaultValue": "\"aaa\""
					}
				},
				"variables": {
					"testvaa": {
						"type": "String",
						"defaultValue": "\"abc\""
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-15T07:15:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSJSONTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					},
					"Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": "adftest"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataExplorer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "StormEvents"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataExplorer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataExplorer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "StormEvents2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataExplorer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorerTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataExplorer3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "TestTableb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataExplorer3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLakeDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "test",
					"table": "fi_table1"
				},
				"schema": [
					{
						"name": "DateID",
						"type": "integer"
					},
					{
						"name": "MedallionID",
						"type": "integer"
					},
					{
						"name": "HackneyLicenseID",
						"type": "integer"
					},
					{
						"name": "PickupTimeID",
						"type": "integer"
					},
					{
						"name": "DropoffTimeID",
						"type": "integer"
					},
					{
						"name": "PickupGeographyID",
						"type": "integer"
					},
					{
						"name": "DropoffGeographyID",
						"type": "integer"
					},
					{
						"name": "PickupLatitude",
						"type": "double"
					},
					{
						"name": "PickupLongitude",
						"type": "double"
					},
					{
						"name": "PickupLatLong",
						"type": "string"
					},
					{
						"name": "DropoffLatitude",
						"type": "double"
					},
					{
						"name": "DropoffLongitude",
						"type": "double"
					},
					{
						"name": "DropoffLatLong",
						"type": "string"
					},
					{
						"name": "PassengerCount",
						"type": "integer"
					},
					{
						"name": "TripDurationSeconds",
						"type": "integer"
					},
					{
						"name": "TripDistanceMiles",
						"type": "double"
					},
					{
						"name": "PaymentType",
						"type": "string"
					},
					{
						"name": "FareAmount",
						"type": "double"
					},
					{
						"name": "SurchargeAmount",
						"type": "double"
					},
					{
						"name": "TaxAmount",
						"type": "double"
					},
					{
						"name": "TipAmount",
						"type": "double"
					},
					{
						"name": "TollsAmount",
						"type": "double"
					},
					{
						"name": "TotalAmount",
						"type": "double"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "a",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "b",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "testbak"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "a",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "b",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name1",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobtrigger",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobtrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`test`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`test-bak`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PremJson1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "adxeventtest"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"TimeStamp": {
							"type": "string"
						},
						"Value": {
							"type": "string"
						},
						"Source": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwtestcsv1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test1.csv",
						"fileSystem": "testdw1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testupsertsql2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "3",
						"type": "String"
					},
					{
						"name": "5",
						"type": "String"
					},
					{
						"name": "6",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testupsertsql21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.testupsertsql2.txt",
						"fileSystem": "test1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer1_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer1_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer1_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer1_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer2_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer2_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer2_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer3_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer3_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer3_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer3_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer3_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage3_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"instancePoolId": "0429-121028-muted1-pool-zwcktz8d",
					"newClusterNumOfWorker": "2:4",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Autoscaling"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6778558653598421.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks2_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"clusterId": "1103-023005-x97az6t4",
					"workspaceResourceId": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/bjdatabricks/providers/Microsoft.Databricks/workspaces/bjdbr1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"clusterId": "1103-023005-x97az6t4",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake2_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksbjucdbrtest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-5729185900588721.1.databricks.azure.cn",
					"clusterId": "1111-054638-uqxdzwct",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksbjucdbrtest_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksbjucdbrtest3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5729185900588721.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksbjucdbrtest3_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricksbjucdbrtest3_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsADFMI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalyticsADFMI_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"server": "[parameters('MySql1_properties_typeProperties_server')]",
					"port": 3306,
					"database": "[parameters('MySql1_properties_typeProperties_database')]",
					"username": "[parameters('MySql1_properties_typeProperties_username')]",
					"sslMode": 1,
					"useSystemTrustStore": 0,
					"password": {
						"type": "SecureString",
						"value": "[parameters('MySql1_password')]"
					},
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobtrigger')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('blobtrigger_properties_typeProperties_serviceEndpoint')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumblingadx')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "premblobtoadx",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowStart": "[parameters('Tumblingadx_properties_pipeline_parameters_windowStart')]",
						"windowEnd": "[parameters('Tumblingadx_properties_pipeline_parameters_windowEnd')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-02-17T11:52:00Z",
					"endTime": "2023-02-18T14:52:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/premblobtoadx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adftest/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-02-24T09:50:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-01-14T02:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-01-14T02:33:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureDataExplorerTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureDataExplorerTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDataExplorerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureDataExplorerTable2')]"
			]
		}
	]
}